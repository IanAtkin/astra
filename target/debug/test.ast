; test script to test expressions, printing, and functions
; implemented so far...
;
; expressions, i.e. 10 / (4 + 16) - 12
; print
; fn with or without return

fn add(number) [
	result = (number + 500) * 5 				; creating the result
	print("The answer is {}", result) 	; printing the result
	return result						; returing the result
]

fn divide(number) [
	wow = "\"Wow!\""
	print("The division yields {} and I'd just like to say, {}, or even, {}", number / 1, "\"Phew!\"", wow)
]

fn mult(number1, number2) [
	print("We're multiplying {} and {}, and the answer is {}!", number1, number2, number1 * number2)
]

fn returns_a_string() [
	my_string = "I work!"
	return my_string
]

a = add(177)					; first we call add and put the returned value in a
print(a)						; then we print a

divide(10)						; then we call divide which prints the result directly
mult(21, 2)						; same with mult

print(returns_a_string())		; then we call ret from within a print statement

b = 2							; declare b as the literal 2
print(b)						; print the value of b

print(d = 100 * (2 + 5) - 63)	; declare d, compute expression, print result
print(d)						; prove that d is now declared

; in your face, see if I'm not right!
print("See? d is now a thing... d = {}", d)

x = 10
if (x == 10) [
	print("x equals {}", x)
]

y = 100
z = 100.0
if (y === z) [
	print("y === z: y equals z, but it's not strictly the same because an integer is not a float!")
] else [
	print("y === z: This is what you should see because the test yields false (y = 100, z = 100.0)")
]

if (y !== z) [
	print("y !== z: That's right, y does not strictly equal z.")
]

if (1 == 1) [
	print("1 equals 1")
] else [
	if (1 == 2) [
		print("1 does not equal 2")
	]
]

if ("dog" < "cat") [
	print("yes")
] else [
	print("no")
]

x = 2
y = 3
print("")
print("is x not 2 or y not 3?")
if(x != 2 or y != 3) [
	print("x is 2 or y is 2")
] else [
	print("neither condition is satisfied, x = {}, y = {}", x, y)
]

